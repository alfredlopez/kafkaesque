name=dudedb-sink-mstar
auto.create=true
auto.evolve=true
connection.url=azure-sqldb_jdbcUrl
connection.user=azure-sqldb_username
connection.password=azure-sqldb_password
connector.class=io.confluent.connect.jdbc.JdbcSinkConnector
delete.enabled=false
dialect.name=SqlServerDatabaseDialect
insert.mode=insert
table.name.format=${topic}
tasks.max=4
topics.regex=dudedb-indexed-(.*)

#What is happening?
#
#table.name.format: defines the target table to write the events, in that case I'm using ${topic} placeholder, it means it will use the topic name.
#topics.regex: will source data from every topic that matches this pattern
#as you can see I added RegexRouter transformation, to dynamically extract the topic name before sinking to MySQL, the
# pattern I used: ([^.]+)\.([^.]+) is to match our topics.regex dudedb-jdbc-[event-name] and then I extracted only group 2 (event-name).
#
#transforms: "route"
#transforms.route.regex: "([^.]+)\.([^.]+)"
#transforms.route.replacement: "$2"
#at the end this group $2 will be passed to table.name.format as ${topic}, then you can connect to your database and
# check your data coming through.
transforms=route
transforms.route.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.route.replacement=$1
transforms.route.regex=dudedb-indexed-(.*)
